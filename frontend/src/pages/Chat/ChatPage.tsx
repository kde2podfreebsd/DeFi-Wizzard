import { ArrowUpOutlined } from "@ant-design/icons";
import { Button, Flex, Space, Typography, message } from "antd";
// import DOMPurify from 'dompurify';
// import { marked } from "marked";
import { useEffect, useRef, useState } from "react";
import ReactMarkdown from 'react-markdown';
import { WithLoader } from "../../components/WithLoader/WithLoader";


type UserMessage = {
  role: 'user',
  content: string;
  timestamp?: string;
}

type AssistantMessage = {
  role: 'assistant',
  content: string;
  timestamp?: string;
}

type Message = UserMessage | AssistantMessage;

// –ü—Ä–∏–º–µ—Ä —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API (–ø–µ—Ä–µ–Ω–µ—Å–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª)
const api = {
  getChatHistory: async (): Promise<Message[]> => {
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π API-–≤—ã–∑–æ–≤
    return [];
  },
  
  sendMessage: async (newMessage: Message): Promise<Message> => {
    void newMessage;

    // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π API-–≤—ã–∑–æ–≤
    return new Promise(resolve => {
      setTimeout(() => {
        resolve({
          role: 'assistant',
          content: `# –ü—Ä–∏–º–µ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üòä

–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–∏–º–µ—Ä —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Markdown. –≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –∑–∞–≥–æ–ª–æ–≤–∫–∏, —Å–ø–∏—Å–∫–∏, —Ç–∞–±–ª–∏—Ü—ã, –±–ª–æ–∫–∏ –∫–æ–¥–∞ –∏ –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–∞–∑–º–µ—Ç–∫–∏, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ —É–≤–∏–¥–µ—Ç—å, –∫–∞–∫ –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞. –¢–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–µ–Ω, –∫–æ–≥–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–ª–∏–Ω–Ω—ã–π –∏–ª–∏ —Å–ª–æ–∂–Ω—ã–π —Ç–µ–∫—Å—Ç.

## –í–≤–µ–¥–µ–Ω–∏–µ

–í —ç—Ç–æ–π —Å–µ–∫—Ü–∏–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–≥–æ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞. –í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:

- **–ó–∞–≥–æ–ª–æ–≤–∫–∏** ‚Äì –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–µ–∫—Ü–∏–∏.
- **–°–ø–∏—Å–∫–∏** ‚Äì –ø–æ–∑–≤–æ–ª—è—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –¥–µ–ª–∞—è –µ–µ –±–æ–ª–µ–µ —á–∏—Ç–∞–±–µ–ª—å–Ω–æ–π.
- **–¢–∞–±–ª–∏—Ü—ã** ‚Äì –ø–æ–º–æ–≥–∞—é—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ–π —Ñ–æ—Ä–º–µ.
- **–ë–ª–æ–∫–∏ –∫–æ–¥–∞** ‚Äì –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∫–æ–¥–∞.
- **–°–º–∞–π–ª–∏–∫–∏** ‚Äì –¥–æ–±–∞–≤–ª—è—é—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –æ–∫—Ä–∞—Å–∫—É –∏ –¥–µ–ª–∞—é—Ç —Ç–µ–∫—Å—Ç –±–æ–ª–µ–µ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º. üòÑ

–≠—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–¥–µ–ª–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º, –Ω–æ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

## –ü—Ä–∏–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã

–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ —Å –ø—Ä–∏–º–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –¢–∞–±–ª–∏—Ü—ã —É–¥–æ–±–Ω—ã –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–¥–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤:

| **–ü–∞—Ä–∞–º–µ—Ç—Ä**   | **–û–ø–∏—Å–∞–Ω–∏–µ**                     | **–ü—Ä–∏–º–µ—Ä –∑–Ω–∞—á–µ–Ω–∏—è**  |
|----------------|-----------------------------------|----------------------|
| –ò–º—è            | –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è                  | –ò–≤–∞–Ω                 |
| –í–æ–∑—Ä–∞—Å—Ç        | –í–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è              | 29 –ª–µ—Ç               |
| –°—Ç–∞—Ç—É—Å         | –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏–ª–∏ –ø–æ–∑–∏—Ü–∏—è        | –ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å|

–≠—Ç–∞ —Ç–∞–±–ª–∏—Ü–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ –º–æ–∂–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è.`,
          timestamp: new Date().toISOString()
        });
      }, 1000);
    });
  }
};

export const ChatPage = () => {
  const [input, setInput] = useState('');
  const [messages, setMessages] = useState<(UserMessage | AssistantMessage)[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  
  const messagesContainerRef = useRef<HTMLDivElement>(null);
  const textareaRef = useRef<HTMLTextAreaElement>(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  useEffect(() => {
    const loadHistory = async () => {
      try {
        setIsLoading(true);
        const history = await api.getChatHistory();

        const sanitizedHistory: (UserMessage | AssistantMessage)[] = []

        for (const message of history) {
          if (message.role === 'user') {
            sanitizedHistory.push(message)
          }

          if (message.role === 'assistant') {
            // message.content = DOMPurify.sanitize(await marked(message.content));
            // sanitizedHistory.push(message);
          }
        }

        setMessages(history);
      } catch {
        message.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π');
      } finally {
        setIsLoading(false);
      }
    };
    
    loadHistory();
  }, []);

  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
  useEffect(() => {
    if (messagesContainerRef.current) {
      messagesContainerRef.current.scrollTop = messagesContainerRef.current.scrollHeight;
    }
  }, [messages]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã—Å–æ—Ç—ã textarea
  useEffect(() => {
    if (textareaRef.current) {
      textareaRef.current.style.height = 'auto';
      textareaRef.current.style.height = `${Math.min(textareaRef.current.scrollHeight, 100)}px`;
    }
  }, [input]);

  const handleSendMessage = async () => {
    if (!input.trim()) return;

    const newUserMessage: Message = {
      role: 'user',
      content: input.trim(),
      timestamp: new Date().toISOString()
    };

    try {
      setMessages(prev => [...prev, newUserMessage]);
      setInput('');

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
      const response = await api.sendMessage(newUserMessage);

      // –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      // response.content = DOMPurify.sanitize(await marked(response.content));

      setMessages(prev => [...prev, response]);

    } catch {
      message.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
      // –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      setMessages(prev => prev.filter(msg => msg.role !== 'user' || msg.content !== newUserMessage.content));
    }
  };

  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  return (
    <WithLoader loading={isLoading} msMax={300}>
      <div style={{ position: 'relative', height: '100%', width: '100%' }}>
        {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π */}
        <div
          ref={messagesContainerRef}
          style={{
            width: '100%',
            height: 'calc(100% - 150px)',
            overflowY: 'auto',
            padding: '40px 40px 25vh 40px',
            scrollBehavior: 'smooth',
          }}
        >
          <Flex vertical gap={20}>
            {messages.map((msg, index) => {
              return (
                <Flex
                  key={index}
                  justify={msg.role === 'user' ? 'flex-end' : 'center'}
                  style={{ width: '100%', }}
                >
                  <div style={{
                    backgroundColor: msg.role === 'user' ? '#F4F4F4' : 'white',
                    borderRadius: 20,
                    maxWidth:  '60%',
                    padding: '12px 16px',
                    margin: '4px 0',
                  }}>
                    <Typography.Paragraph 
                      style={{ marginBottom: 0 }}
                    >
                      {msg.role === 'assistant' && (
                        <ReactMarkdown>
                          {msg.content}
                        </ReactMarkdown>
                        // <div dangerouslySetInnerHTML={{ __html: msg.content }}/>
                      )}
                      {msg.role === 'user' && msg.content}
                    </Typography.Paragraph>
                    <Typography.Text type="secondary" style={{ fontSize: 12, display: 'block' }}>
                      {new Date(msg.timestamp!).toLocaleTimeString()}
                    </Typography.Text>
                  </div>
                </Flex>
              )
            })}
          </Flex>
        </div>

        {/* –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π */}
        <div
          style={{
            zIndex: 10,
            width: '60%',
            position: 'absolute',
            left: '20%',
            transition: 'all 0.5s',
            ...(!messages.length && {
              bottom: '45%',
            }),
            ...(messages.length && {
              bottom: '5%',
            }),
          }}
        >
          <Space direction='vertical' size={5} style={{ display: 'flex', width: '100%' }}>
            {messages.length === 0 && (
              <Flex justify='center'>
                <Typography.Title level={3}>–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?</Typography.Title>
              </Flex>
            )}

            <div style={{
              backgroundColor: 'white',
              borderRadius: 30,
              boxShadow: '0 5px 30px 0 rgba(0, 0, 0, 0.10)',
              padding: '10px'
            }}>
              <Space direction='vertical' size={5} style={{ display: 'flex' }}>
                <textarea
                  ref={textareaRef}
                  value={input}
                  onChange={(e) => setInput(e.target.value)}
                  onKeyDown={handleKeyDown}
                  placeholder="–°–ø—Ä–æ—Å–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å..."
                  style={{
                    border: 'none',
                    outline: 'none',
                    resize: 'none',
                    width: '96%',
                    minHeight: '10px',
                    maxHeight: '100px',
                    overflowY: 'auto',
                    margin: '7px 2%'
                  }}
                />
                <Flex justify='flex-end' align="center" style={{ padding: '5px' }}>
                  <Button
                    type='primary'
                    shape='circle'
                    icon={<ArrowUpOutlined />}
                    onClick={handleSendMessage}
                    style={{ backgroundColor: '#6253e1' }}
                  />
                </Flex>
              </Space>
            </div>
          </Space>
        </div>
      </div>
    </WithLoader>
  );
};